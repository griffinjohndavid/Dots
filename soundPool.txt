after Oncreate


    protected SoundPool createSoundPool() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            return createNewSoundPool();
        } else {
            return createOldSoundPool();
        }
    }

    @TargetApi(Build.VERSION_CODES.LOLLIPOP)
    protected SoundPool createNewSoundPool(){
        AudioAttributes attributes = new AudioAttributes.Builder()
                .setUsage(AudioAttributes.USAGE_GAME)
                .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)
                .build();
        return new SoundPool.Builder()
                .setAudioAttributes(attributes)
                .build();
    }

    @SuppressWarnings("deprecation")
    protected SoundPool createOldSoundPool(){
        return new SoundPool(5, AudioManager.STREAM_MUSIC, 0);
    }

inside Oncreate

        mSoundPool = createSoundPool();
        mSoundIds = new ArrayList<>();
        mSoundIds.add(mSoundPool.load(this, R.raw.cheer, 1));
        mSoundIds.add(mSoundPool.load(this, R.raw.lose, 1));
        mSoundIds.add(mSoundPool.load(this, R.raw.swish, 1));
        mSoundIds.add(mSoundPool.load(this, R.raw.sword, 1));

before Oncreate
    private SoundPool mSoundPool;